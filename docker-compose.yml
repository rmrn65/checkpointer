version: '2'
services:
  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:29092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 9000:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  zookeeper:
    image: zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  process:
    build:
      context: ./process
      dockerfile: Dockerfile-process
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - ACCOUNT=account1
      - CHECKPOINTER_HOST=checkpointer
      - HOST=process
      - FW_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - kafka
      - checkpointer
    restart: on-failure

  process2:
    build:
      context: ./process
      dockerfile: Dockerfile-process
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - ACCOUNT=account2
      - CHECKPOINTER_HOST=checkpointer
      - HOST=process2
      - FW_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - kafka
      - checkpointer
#    restart: on-failure
  redis:
    image: redis:latest
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
  redis-commander:
      image: rediscommander/redis-commander:latest
      environment:
        - REDIS_HOSTS=local:redis:6379
      ports:
        - "8083:8081"
      depends_on:
        - redis
  checkpointer:
    build:
      context: ./checkpointer
      dockerfile: Dockerfile-checkpointer
    ports:
      - "8084:8084"
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - FW_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
#    restart: on-failure

volumes:
  redis-data: